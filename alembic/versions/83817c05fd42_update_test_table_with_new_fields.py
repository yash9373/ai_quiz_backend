"""Update test table with new fields

Revision ID: 83817c05fd42
Revises: 1c30a1b4e33d
Create Date: 2025-06-30 22:25:30.767074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '83817c05fd42'
down_revision: Union[str, Sequence[str], None] = '1c30a1b4e33d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_test_id'), table_name='test')
    op.drop_table('test')
    
    # Create new test table with updated schema
    op.create_table('test',
        sa.Column('test_id', sa.Integer(), nullable=False),
        sa.Column('test_name', sa.String(length=100), nullable=False),
        sa.Column('job_description', sa.Text(), nullable=True),
        sa.Column('parsed_job_description', sa.Text(), nullable=True),
        sa.Column('skill_graph', sa.Text(), nullable=True),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.Column('updated_by', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], ),
        sa.PrimaryKeyConstraint('test_id')
    )
    op.create_index(op.f('ix_test_test_id'), 'test', ['test_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('test_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], name=op.f('test_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], name=op.f('test_updated_by_fkey')),
    sa.PrimaryKeyConstraint('test_id', name=op.f('test_pkey'))
    )
    op.create_index(op.f('ix_test_test_id'), 'test', ['test_id'], unique=False)
    # ### end Alembic commands ###
